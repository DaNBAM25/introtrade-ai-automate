
import { useState } from "react";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { toast } from "sonner";

interface BusinessPlanResponse {
  payback_period_months: number;
  monthly_revenue_estimate: number;
  startup_investment: number;
  business_plan: string;
  marketing_plan: string;
  market_analysis: string;
}

export const BusinessPlanGenerator = () => {
  const [idea, setIdea] = useState("");
  const [location, setLocation] = useState("");
  const [isLoading, setIsLoading] = useState(false);
  const [result, setResult] = useState<BusinessPlanResponse | null>(null);

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    if (!idea.trim() || !location.trim()) {
      toast.error("Please fill in both fields");
      return;
    }

    setIsLoading(true);
    try {
      const response = await fetch("https://bazar11.app.n8n.cloud/webhook-test/222222", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ idea, location }),
      });

      if (!response.ok) {
        throw new Error("Failed to get response");
      }

      const data = await response.json();
      setResult(data);
    } catch (error) {
      console.error("Error:", error);
      toast.error("Failed to generate business plan. Please try again.");
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div className="container mx-auto px-4 py-8">
      <div className="mx-auto max-w-4xl">
        <h1 className="mb-8 text-4xl font-bold">AI –∞–Ω–∞–ª–∏–∑ –±–∏–∑–Ω–µ—Å-–∏–¥–µ–∏</h1>
        <p className="mb-8 text-lg text-muted-foreground">
          –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –∏–¥–µ—é, –ø–æ–ª—É—á–∏—Ç–µ –±–∏–∑–Ω–µ—Å-–ø–ª–∞–Ω, —Ä–∞—Å—á–µ—Ç –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π –∏ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–≥–æ –¥–æ—Ö–æ–¥–∞ –æ—Ç –±–∏–∑–Ω–µ—Å–∞ –≤ –ª—é–±–æ–π —Ç–æ—á–∫–µ –º–∏—Ä–∞.
        </p>

        <form onSubmit={handleSubmit} className="mb-8 space-y-4">
          <div>
            <Input
              value={idea}
              onChange={(e) => setIdea(e.target.value)}
              placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É –±–∏–∑–Ω–µ—Å-–∏–¥–µ—é"
              className="mb-4"
            />
            <Input
              value={location}
              onChange={(e) => setLocation(e.target.value)}
              placeholder="–í–≤–µ–¥–∏—Ç–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ"
            />
          </div>
          <Button type="submit" disabled={isLoading} className="w-full">
            {isLoading ? "–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º..." : "–†–∞—Å—Å—á–∏—Ç–∞—Ç—å"}
          </Button>
        </form>

        {result && (
          <div className="space-y-6">
            <div className="grid gap-4 md:grid-cols-3">
              <Card>
                <CardHeader>
                  <CardTitle>–ï–∂–µ–º–µ—Å—è—á–Ω—ã–π –¥–æ—Ö–æ–¥</CardTitle>
                </CardHeader>
                <CardContent>
                  <p className="text-2xl font-bold">${result.monthly_revenue_estimate}</p>
                </CardContent>
              </Card>
              <Card>
                <CardHeader>
                  <CardTitle>–°—Ä–æ–∫ –æ–∫—É–ø–∞–µ–º–æ—Å—Ç–∏</CardTitle>
                </CardHeader>
                <CardContent>
                  <p className="text-2xl font-bold">{result.payback_period_months} –º–µ—Å—è—Ü–µ–≤</p>
                </CardContent>
              </Card>
              <Card>
                <CardHeader>
                  <CardTitle>–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏</CardTitle>
                </CardHeader>
                <CardContent>
                  <p className="text-2xl font-bold">${result.startup_investment}</p>
                </CardContent>
              </Card>
            </div>

            <Card>
              <CardHeader>
                <CardTitle>–ë–∏–∑–Ω–µ—Å-–∏–¥–µ—è</CardTitle>
              </CardHeader>
              <CardContent>
                <p>{result.business_plan}</p>
              </CardContent>
            </Card>

            <Card>
              <CardHeader>
                <CardTitle>–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–π –ø–ª–∞–Ω</CardTitle>
              </CardHeader>
              <CardContent>
                <p>{result.marketing_plan}</p>
              </CardContent>
            </Card>

            <Card>
              <CardHeader>
                <CardTitle>–ê–Ω–∞–ª–∏–∑ —Ä—ã–Ω–∫–∞</CardTitle>
              </CardHeader>
              <CardContent>
                <p>{result.market_analysis}</p>
              </CardContent>
            </Card>

            <div className="mt-8 rounded-lg border bg-muted p-6">
              <h3 className="mb-4 text-xl font-semibold">
                –•–æ—Ç–∏—Ç–µ –Ω–µ –ø—Ä–æ—Å—Ç–æ –¥–µ–º–æ –±–∏–∑–Ω–µ—Å-–∏–¥–µ–∏, –∞ –¥–µ—Ç–∞–ª—å–Ω—ã–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π —Å –ø—Ä–æ–≥–Ω–æ–∑–æ–º ROI, –∞–Ω–∞–ª–∏–∑–æ–º —Ä–∏—Å–∫–æ–≤ –∏ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ–º –∫–∞–∂–¥–æ–≥–æ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è?
              </h3>
              <p className="mb-4">–ù–∞—à–∏ –±–∏–∑–Ω–µ—Å-–ø–ª–∞–Ω—ã –≤–∫–ª—é—á–∞—é—Ç:</p>
              <ul className="mb-6 list-inside list-disc space-y-2">
                <li>–§–∏–Ω–∞–Ω—Å–æ–≤—É—é –º–æ–¥–µ–ª—å —Å NPV, IRR –∏ —Å—Ä–æ–∫–æ–º –æ–∫—É–ø–∞–µ–º–æ—Å—Ç–∏</li>
                <li>–ê–Ω–∞–ª–∏–∑ —Ä—ã–Ω–∫–∞: –æ–±—ä–µ–º TAM/SAM, –¥–∏–Ω–∞–º–∏–∫–∞ —Å–ø—Ä–æ—Å–∞, –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ</li>
                <li>–ü–ª–∞–Ω –ø–æ—Å—Ç–∞–≤–æ–∫: –ø–æ–¥–±–æ—Ä –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤, –ª–æ–≥–∏—Å—Ç–∏–∫–∞, –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã</li>
                <li>–û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã —Å —É—á–µ—Ç–æ–º –∏–Ω—Ñ–ª—è—Ü–∏–∏ –∏ –≤–∞–ª—é—Ç–Ω—ã—Ö —Ä–∏—Å–∫–æ–≤</li>
                <li>–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—É—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é ‚Äî –æ—Ç CAC –¥–æ LTV</li>
              </ul>
              <p className="mb-4 font-semibold">
                üìå –†–µ–∑—É–ª—å—Ç–∞—Ç: –¥–æ–∫—É–º–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–æ–π–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤ –∏ –±–∞–Ω–∫–æ–≤.
              </p>
              <Button className="w-full">üëâ –ó–∞–∫–∞–∑–∞—Ç—å —Ä–∞—Å—á–µ—Ç –ø–æ–¥ –∫–ª—é—á</Button>
            </div>
          </div>
        )}
      </div>
    </div>
  );
};
